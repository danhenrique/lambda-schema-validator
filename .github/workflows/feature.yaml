name: CI Build and Test

on:
    push:
      branches:
        - 'feature'
        - 'feature/**'
        - 'feature-**'
        - 'feature_**'

env:
  PYTHON_VERSION: "3.X"
  TEST_FOLDER: "another_value"
  REQUIREMENTS_PROD: "app/requirements.txt"
  REQUIREMENTS_TEST: "app/requirements-test.txt"
  GH_TOKEN: ${{ github.token }}
  DESTROY: false

jobs:
    validate-lambda-code:
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Read Configuration
              run: |
                pip install pyyaml
                python .github/scripts/read_config.py          

            # - name: Set output variable
            #   id: config
            #   run: |
            #     echo "PYTHON_VERSION=${{ env.PYTHON_VERSION }}" >> "$GITHUB_OUTPUT"
            #     echo "TEST_FOLDER=${{ env.TEST_FOLDER }}" >> "$GITHUB_OUTPUT"
            #     echo "REQUIREMENTS_PROD=${{ env.REQUIREMENTS_PROD }}" >> "$GITHUB_OUTPUT"
            #     echo "REQUIREMENTS_TEST=${{ env.REQUIREMENTS_TEST }}" >> "$GITHUB_OUTPUT"

            - name: Set up Python (from config)
              if: env.DESTROY != 'true'
              uses: actions/setup-python@v2
              with:
                python-version: ${{ env.PYTHON_VERSION }}

            - name: Install dependencies
              if: env.DESTROY != 'true'
              run: |
                python -m pip install --upgrade pip
                pip install -r ${{ env.REQUIREMENTS_PROD }}

            - name: Run tests
              if: env.DESTROY != 'true'
              run: |
                pytest ${{ env.TEST_FOLDER }} --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

    validate-terraform:
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Terraform FMT
              run: |
                cd infra
                terraform fmt -check

    create-pull-request:
        runs-on: ubuntu-latest
        needs: [validate-lambda-code, validate-terraform]
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: create pull request
              run: gh pr create -B main -H ${{ github.ref }} --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
