name: CI Build and Test

on:
    push:
      branches:
        - 'feature'
        - 'feature/**'
        - 'feature-**'
        - 'feature_**'

env:
  PYTHON_VERSION: "3.X"
  TEST_FOLDER: "another_value"
  REQUIREMENTS_PROD: "app/requirements.txt"
  REQUIREMENTS_TEST: "app/requirements-test.txt"

jobs:
    setup:
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Read configuration file
              run: |
                pip install pyyaml
                python .github/scripts/read_config.py

            - name: Set output variable
              id: config
              run: |
                echo "::set-output name=PYTHON_VERSION::${{ env.PYTHON_VERSION }}"
                echo "::set-output name=TEST_FOLDER::${{ env.TEST_FOLDER }}"
                echo "::set-output name=REQUIREMENTS_PROD::${{ env.REQUIREMENTS_PROD }}"
                echo "::set-output name=REQUIREMENTS_TEST::${{ env.REQUIREMENTS_TEST }}"

    test:
        runs-on: ubuntu-latest
        needs: setup
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Read Configuration
              run: |
                pip install pyyaml
                python .github/scripts/read_config.py

            - name: Debug - Print Environment Variables
              run: |
                echo "PYTHON_VERSION=${{ needs.setup.outputs.PYTHON_VERSION }}"
                echo "TEST_FOLDER=${{ needs.setup.outputs.TEST_FOLDER }}"
                echo "REQUIREMENTS_PROD=${{ needs.setup.outputs.REQUIREMENTS_PROD }}"
                echo "REQUIREMENTS_TEST=${{ needs.setup.outputs.REQUIREMENTS_TEST }}"

            - name: Set up Python (from config)
              uses: actions/setup-python@v2
              with:
                python-version: ${{ needs.setup.outputs.PYTHON_VERSION }}

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r ${{ needs.setup.outputs.REQUIREMENTS_PROD }}

            - name: Run tests
              run: |
                pytest ${{ env.TEST_FOLDER }}

            - name: Validate Terraform
              run: |
                cd infra
                terraform fmt -check
                terraform validate

            - name: Create Pull Request
              uses: peter-evans/create-pull-request@v3
              with:
                branch: develop
                commit-message: Create Pull Request for feature branch
                title: Pull Request from feature branch
                body: Auto-generated Pull Request from feature branch
                labels: feature
